{"version":3,"sources":["components/TodoItem.module.css","modal/todos.ts","store/TodosContext.tsx","components/NewTodo.tsx","components/TodoItem.tsx","components/Todos.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/NewTodo.module.css","components/Todos.module.css"],"names":["module","exports","Todo","todoText","id","text","this","Date","toISOString","TodoContext","React","createContext","items","addTodo","todoContent","removeTodo","TodosContextProvider","props","useState","todos","setTodo","contextValue","newTodo","prevTodos","TodoId","updatedTodo","filter","todo","Provider","value","children","NewTodo","todoCtx","useContext","useRef","onSubmit","event","preventDefault","todoValue","current","trim","length","console","log","className","classes","form","htmlFor","type","ref","TodoItem","item","onClick","RemoveTodo","todoData","Todos","TodoCtx","map","bind","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","x","document","getElementById","ReactDOM","createRoot","render","StrictMode"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,KAAO,uB,mLCQVC,E,aANX,WAAYC,GAAiB,yBAF7BC,QAE4B,OAD5BC,UAC4B,EACxBC,KAAKD,KAAKF,EACVG,KAAKF,IAAG,IAAIG,MAAOC,aACtB,I,OCEQC,EAAcC,IAAMC,cAA2B,CAC1DC,MAAO,GACPC,QAAS,SAACC,GAA0B,EACpCC,WAAY,SAACX,GAAiB,IA8BjBY,EA3BuD,SACpEC,GAEA,MAAyBC,mBAAiB,IAA1C,mBAAOC,EAAP,KAAcC,EAAd,KAWMC,EAA4B,CAChCT,MAAOO,EACPN,QAZc,SAACV,GACf,IAAMmB,EAAU,IAAIpB,EAAKC,GACzBiB,GAAQ,SAACG,GACP,MAAM,CAAED,GAAR,mBAAoBC,GACrB,GACF,EAQCR,WAPiB,SAACS,GAClB,IAAMC,EAAcN,EAAMO,QAAO,SAACC,GAAD,OAAUA,EAAKvB,KAAOoB,CAAtB,IACjCJ,EAAQK,EACT,GAOD,OACE,cAAChB,EAAYmB,SAAb,CAAsBC,MAAOR,EAA7B,SACGJ,EAAMa,UAGZ,ECXcC,EAtBW,WACxB,IAAMC,EAAQC,qBAAWxB,GACnBK,EAAcoB,iBAAyB,MAY7C,OACE,uBAAMC,SAZkB,SAACC,GACzBA,EAAMC,iBACN,IAAIC,EAAYxB,EAAYyB,QAASV,MACL,IAA5BS,EAAUE,OAAOC,QAIrBT,EAAQnB,QAAQyB,GAChBxB,EAAYyB,QAASV,MAAQ,IAJ3Ba,QAAQC,IAAI,mBAKf,EAGoCC,UAAWC,IAAQC,KAAtD,UACE,uBAAOC,QAAQ,UAAf,kBACA,uBAAOC,KAAK,OAAO5C,GAAG,UAAU6C,IAAKnC,IACrC,gDAGL,E,iCCTcoC,EAXV,SAACjC,GACJ,OACE,oBACE2B,UAAWC,IAAQM,KACnBC,QAAS,kBAAMnC,EAAMoC,WAAWpC,EAAMqC,SAASlD,GAAtC,EAFX,SAIGa,EAAMqC,SAASjD,MAGrB,ECMckD,EAjBS,SACtBtC,GAEA,IAAMuC,EAAQvB,qBAAWxB,GACzB,OACE,oBAAImC,UAAWC,IAAQ1B,MAAvB,SACGqC,EAAQ5C,MAAM6C,KAAI,SAACN,GAAD,OACjB,cAAC,EAAD,CACEE,WAAYG,EAAQzC,WAAW2C,KAAK,KAAKP,EAAK/C,IAE9CkD,SAAUH,GADLA,EAAK/C,GAHK,KASxB,ECMcuD,MApBf,WAYE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,MAGL,ECVcC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,ECPKQ,EAAIC,SAASC,eAAe,QACrBC,IAASC,WAAWJ,GAE5BK,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,OAOJf,G,oBChBA5D,EAAOC,QAAU,CAAC,KAAO,sB,oBCAzBD,EAAOC,QAAU,CAAC,MAAQ,qB","file":"static/js/main.c59907b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__3kYYo\"};","class Todo{\r\n    id:string;\r\n    text:string;\r\n    constructor(todoText:string){\r\n        this.text=todoText;\r\n        this.id=new Date().toISOString();\r\n    }\r\n}\r\n\r\nexport default Todo;","import Todo from '../modal/todos';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\ntype TodoContext = {\r\n  items: Todo[];\r\n  addTodo: (todoContent: string) => void;\r\n  removeTodo: (id: string) => void;\r\n};\r\nexport const TodoContext = React.createContext<TodoContext>({\r\n  items: [],\r\n  addTodo: (todoContent: string) => {},\r\n  removeTodo: (id: string) => {},\r\n});\r\n\r\nconst TodosContextProvider: React.FC<{ children: React.ReactNode }> = (\r\n  props\r\n) => {\r\n  const [todos, setTodo] = useState<Todo[]>([]);\r\n  const addTodo = (todoText: string) => {\r\n    const newTodo = new Todo(todoText);\r\n    setTodo((prevTodos) => {\r\n      return [newTodo, ...prevTodos];\r\n    });\r\n  };\r\n  const removeTodo = (TodoId: string) => {\r\n    const updatedTodo = todos.filter((todo) => todo.id !== TodoId);\r\n    setTodo(updatedTodo);\r\n  };\r\n  const contextValue: TodoContext = {\r\n    items: todos,\r\n    addTodo,\r\n    removeTodo,\r\n  };\r\n\r\n  return (\r\n    <TodoContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </TodoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TodosContextProvider;\r\n","import React from 'react';\r\nimport classes from './NewTodo.module.css';\r\nimport { useContext } from 'react';\r\nimport { TodoContext } from '../store/TodosContext'\r\n\r\nimport { useRef } from 'react';\r\nconst NewTodo: React.FC = () => {\r\n  const todoCtx=useContext(TodoContext);\r\n  const todoContent = useRef<HTMLInputElement>(null);\r\n  const submitFormHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    let todoValue = todoContent.current!.value;\r\n    if (todoValue.trim().length === 0) {\r\n      console.log('can not be empty');\r\n      return;\r\n    }\r\n    todoCtx.addTodo(todoValue);\r\n    todoContent.current!.value = '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitFormHandler} className={classes.form}>\r\n      <label htmlFor=\"newTodo\">Todo</label>\r\n      <input type=\"text\" id=\"newTodo\" ref={todoContent} />\r\n      <button>Add Todo</button>\r\n    </form>\r\n  );\r\n};\r\nexport default NewTodo;\r\n","import Todo from '../modal/todos';\r\nimport classes from './TodoItem.module.css';\r\nimport React from 'react';\r\n\r\nconst TodoItem: React.FC<{\r\n  todoData: Todo;\r\n  RemoveTodo: (id: string) => void;\r\n}> = (props) => {\r\n  return (\r\n    <li\r\n      className={classes.item}\r\n      onClick={() => props.RemoveTodo(props.todoData.id)}\r\n    >\r\n      {props.todoData.text}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import classes from './Todos.module.css';\r\nimport Todo from '../modal/todos';\r\nimport TodoItem from './TodoItem';\r\nimport { useContext } from 'react';\r\nimport { TodoContext } from '../store/TodosContext';\r\nconst Todos: React.FC = (\r\n  props\r\n) => {\r\n  const TodoCtx=useContext(TodoContext)\r\n  return (\r\n    <ul className={classes.todos}>\r\n      {TodoCtx.items.map((item) => (\r\n        <TodoItem\r\n          RemoveTodo={TodoCtx.removeTodo.bind(null,item.id)}\r\n          key={item.id}\r\n          todoData={item}\r\n        ></TodoItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import { useState } from 'react';\nimport './App.css';\nimport NewTodo from './components/NewTodo';\nimport Todos from './components/Todos';\nimport Todo from './modal/todos';\nimport TodoContextProvider from './store/TodosContext';\nfunction App() {\n  // const [todos, setTodo] = useState<Todo[]>([]);\n  // const AddNewTodo = (todoText: string) => {\n  //   const newTodo = new Todo(todoText);\n  //   setTodo((prevTodos) => {\n  //     return [newTodo, ...prevTodos];\n  //   });\n  // };\n  // const RemoveTodo = (TodoId: string) => {\n  //   const updatedTodo = todos.filter((todo) => todo.id !== TodoId);\n  //   setTodo(updatedTodo);\n  // };\n  return (\n    <TodoContextProvider>\n      <NewTodo ></NewTodo>\n      <Todos ></Todos>\n    </TodoContextProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nconst x = document.getElementById('root')!;\nconst root = ReactDOM.createRoot(x);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewTodo_form__1PKb4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todos\":\"Todos_todos__1MZAz\"};"],"sourceRoot":""}